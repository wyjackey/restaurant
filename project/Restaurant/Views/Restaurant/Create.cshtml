@model Restaurant.Models.Menu

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Restaurant", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Menu</legend>

        @*<div class="editor-label">
            @Html.LabelFor(model => model.Menu_id)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Menu_id)
            @Html.ValidationMessageFor(model => model.Menu_id)
        </div>*@

        <div class="editor-label">

            @Html.LabelFor(model => model.Menu_name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Menu_name)
            @Html.ValidationMessageFor(model => model.Menu_name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Flavor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Flavor)
            @Html.ValidationMessageFor(model => model.Flavor)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Rating)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rating)
            @Html.ValidationMessageFor(model => model.Rating)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Is_available)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Is_available)
            @Html.ValidationMessageFor(model => model.Is_available)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Is_new)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Is_new)
            @Html.ValidationMessageFor(model => model.Is_new)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Quantity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Is_Activation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Is_Activation)
            @Html.ValidationMessageFor(model => model.Is_Activation)
        </div>

        <div>@Restaurant.App_GlobalResources.Restaurants.UploadMenuBigPicture</div>
        <input type="file" name="smallPicture" />

        <div class="editor-label">
            @Html.LabelFor(model => model.Image_info.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Image_info.Description)
            @Html.ValidationMessageFor(model => model.Image_info.Description)
        </div>

        <div>@Restaurant.App_GlobalResources.Restaurants.UploadMenuSmallPicture</div>
        <input type="file" name="bigPicture" />

        <div class="editor-label">
            @Html.LabelFor(model => model.Image_info1.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Image_info1.Description)
            @Html.ValidationMessageFor(model => model.Image_info1.Description)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
